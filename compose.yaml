x-blackhole: &blackhole
  build:
    context: .
    dockerfile: Dockerfile.blackhole
  image: ghcr.io/westsurname/scripts/blackhole:latest
  pull_policy: always
  user: "${PUID:-}${PGID:+:${PGID}}"
  env_file:
    - .env
  restart: unless-stopped

x-repair: &repair
  build:
    context: .
    dockerfile: Dockerfile.scripts
  image: ghcr.io/westsurname/scripts/scripts:latest
  pull_policy: always
  command: python repair.py --no-confirm
  env_file:
    - .env
  restart: unless-stopped

services:
  blackhole:
    <<: *blackhole
    container_name: blackhole_service
    environment:
      - BLACKHOLE_BASE_WATCH_PATH=/${BLACKHOLE_BASE_WATCH_PATH}
    volumes:
      - ${REALDEBRID_MOUNT_TORRENTS_PATH:-${BLACKHOLE_RD_MOUNT_TORRENTS_PATH:-/dev/null}}/../../:${REALDEBRID_MOUNT_TORRENTS_PATH:-${BLACKHOLE_RD_MOUNT_TORRENTS_PATH:-/dev/null}}/../../:rslave
      - ${TORBOX_MOUNT_TORRENTS_PATH:-/dev/null}:${TORBOX_MOUNT_TORRENTS_PATH:-/dev/null}/../../:rslave
      - ${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_SONARR_PATH}:/${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_SONARR_PATH}
      - ${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_RADARR_PATH}:/${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_RADARR_PATH}
    # profiles: [blackhole, blackhole_all, all]

  repair_service:
    <<: *repair
    container_name: repair_service
    volumes:
      - ${REALDEBRID_MOUNT_TORRENTS_PATH:-${BLACKHOLE_RD_MOUNT_TORRENTS_PATH:-/dev/null}}/../../:${REALDEBRID_MOUNT_TORRENTS_PATH:-${BLACKHOLE_RD_MOUNT_TORRENTS_PATH:-/dev/null}}/../../:rslave
      - ${TORBOX_MOUNT_TORRENTS_PATH:-/dev/null}:${TORBOX_MOUNT_TORRENTS_PATH:-/dev/null}/../../:rslave
      - ${SONARR_ROOT_FOLDER}:${SONARR_ROOT_FOLDER}
      - ${RADARR_ROOT_FOLDER}:${RADARR_ROOT_FOLDER}
    # profiles: [repair, repair_all, all]

  watchlist:
    build:
      context: .
      dockerfile: Dockerfile.watchlist
    container_name: watchlist_service
    image: ghcr.io/westsurname/scripts/watchlist:latest
    pull_policy: always
    volumes:
      - ./shared/tokens.json:/app/shared/tokens.json
    env_file:
      - .env
    restart: unless-stopped
    # profiles: [watchlist, all]

  plex_authentication:
    build:
      context: .
      dockerfile: Dockerfile.plex_authentication
    container_name: plex_authentication_service
    image: ghcr.io/westsurname/scripts/plex_authentication:latest
    pull_policy: always
    volumes:
      - ./shared/tokens.json:/app/shared/tokens.json
      - ./sockets:/app/sockets
    env_file:
      - .env
    restart: unless-stopped
    profiles: [plex_authentication, watchlist, plex_request, all]

  plex_request:
    build:
      context: .
      dockerfile: Dockerfile.plex_request
    container_name: plex_request_service
    image: ghcr.io/westsurname/scripts/plex_request:latest
    pull_policy: always
    volumes:
      - ./shared/tokens.json:/app/shared/tokens.json
      - ./sockets:/app/sockets
    env_file:
      - .env
    restart: unless-stopped
    profiles: [plex_request, all]

  plex_request_nginx:
    build:
      context: .
      dockerfile: Dockerfile.plex_request_nginx
    container_name: plex_request_nginx_service
    image: ghcr.io/westsurname/scripts/plex_request_nginx:latest
    pull_policy: always
    volumes:
      - ${PLEX_SERVER_PATH}:/plex:ro
      - ./sockets:/app/sockets
    ports:
      - 8012:8000
    env_file:
      - .env
    restart: unless-stopped
    profiles: [plex_request, all]
    depends_on:
      - plex_request
      - plex_authentication

networks:
  default:
    name: ${DOCKER_NETWORK:-scripts_default}
    external: ${DOCKER_NETWORK_EXTERNAL:-false}
